const crypto = require("crypto");
const { cmd } = require("../command");

cmd({
  pattern: "gpass",
  desc: "Generate a strong password.",
  category: "other",
  react: '🔐',
  filename: __filename
}, async (message, client, args, { reply }) => {
  try {
    // Get password length from arguments or default to 12
    const length = args[0] ? parseInt(args[0]) : 12;
    
    // Validate length
    if (isNaN(length) || length < 8) {
      return await reply("Please provide a valid length for the password (Minimum 8 characters).");
    }

    // Password generation function
    const generatePassword = (len) => {
      const chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+[]{}|;:,.<>?";
      let password = '';
      
      for (let i = 0; i < len; i++) {
        const randomIndex = crypto.randomInt(0, chars.length);
        password += chars[randomIndex];
      }
      
      return password;
    };

    // Generate the password
    const password = generatePassword(length);

    // Send the password message
    await reply(
      `🔐 *Your Strong Password* 🔐\n\n` +
      `Password length: ${length} characters\n\n` +
      `Generated by *CASEYRHODES-XMD*\n\n` +
      `Your password: \`${password}\``,
      { quoted: message }
    );

  } catch (error) {
    console.error("Password generation error:", error);
    await reply("❌ Error generating password: " + error.message);
  }
});
